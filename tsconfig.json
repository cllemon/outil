{
  // https://www.typescriptlang.org/docs/handbook/compiler-options.html
  "compilerOptions": {
    "outDir": "dist",
    // 允许从没有默认导出的模块进行默认导入。这并不影响代码发出，只影响类型转换。
    // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "allowSyntheticDefaultImports": true,
    // 在switch语句中报告fallthrough情况的错误。
    // Report errors for fallthrough cases in switch statement.
    "noFallthroughCasesInSwitch": true,
    // Report errors on unused parameters.
    "noUnusedParameters": true,
    // Report error when not all code paths in function return a value.
    "noImplicitReturns": true,
    // Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    "moduleResolution": "node",
    // Enables emit interoperability between CommonJS and ES Modules via creation of
    // namespace objects for all imports. Implies 'allowSyntheticDefaultImports'
    "esModuleInterop": true,
    // Report errors on unused locals.
    "noUnusedLocals": true,
    // Raise error on expressions and declarations with an implied 'any' type.
    "noImplicitAny": false,
    "declarationDir": "dist/types",
    // Generates corresponding '.d.ts' file.
    "declaration": true,
    // Specify ECMAScript target version: 'ES3' (default), 'ES5',
    //  'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'.
    "target": "esnext",
    // Specify module code generation: 'none', 'commonjs', 'amd',
    // 'system', 'umd', 'es2015', 'es2020', or 'ESNext'.
    "module": "esnext",
    // Enable all strict type-checking options.
    "strict": true
  },
  "include": ["src/**/*", "types", "__tests__"],
  "exclude": ["node_modules", "dist"]
}
